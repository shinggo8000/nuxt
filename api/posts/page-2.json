[{"content":"You're publishing great content! Make sure people can get it easily right in their inbox with Awake's ready to go Mailchimp integration. Follow these instructions to get your newsletter up and running\n\n## 1. Signup with Mailchimp\n\nIf you don't already have a mailchimp account, head on over to [mailchimp.com](https://mailchimp.com) and sign up (don't worry they have free tiers that will give you all you probably need).\n\n## 2. Create a New Campaign\n\nGo to \"Campaigns\" in the main navigation of the Mailchimp dashboard and then click the \"Create Campaign\" button on the top right.\n\n## 3. Start Signup Form\n\nFrom the modal overlay that appears choose \"Signup Form\", then click \"Begin\" under \"Embedded Form\"\n\n![Mailchimp create signup form](/uploads/screen-shot-2019-08-01-at-1.03.08-pm.png)\n\n## 4. Get Form Action\n\nUnder \"Copy/paste onto your site\" you'll see the markup  for the newsletter form. Just copy the form action value from the form\n\n![copy form action from mailchimp](/uploads/screen-shot-2019-08-01-at-1.05.09-pm.png)\n\n## 5. Add the Action to the Awake Site Configuration\n\n```\n// Can be the form action on a mail chimp form, a hubspot form,\n// or any other url you want to post the form data tomailchimp: {\n    on: true,\n    formAction:'enter url here'\n}\n```\n","isEmpty":false,"excerpt":"","title":"Newsletter Signup","subtitle":"Awake Integrates with Mailchimp for Easy Newsletter Management","category":["Third Party Integrations"],"author":"Daniel Kelly","date":"2019-08-01T03:49:49.295Z","featureImage":"/uploads/mailchimp.jpg","slug":"newsletter-signup"},{"content":"Typically the convenience of a CSS framework like Bulma comes at the cost of sending loads of unused css to the browser increasing load times and hindering user experience. So just don't use Bulma (or Bootstrap, Tailwind, or otherwise) right? No, that can't be the answer. These frameworks add to the designer's experience and ability to quickly turn around a finished design. \n\nEnter [Purge CSS](https://www.purgecss.com/). Purge CSS crawls through your html and css comparing them and removing any unused selectors from your stylesheets at build time so that they can be as slim as possible. So all those useful classes that Bulma has but you just aren't using right now won't slow down your site. And then maybe you decide to use one of them in the future. BOOM, it's there next time you compile with no thought on your part. \n\nSince Awake is built on the JAM Stack, it can easily take advantage of this technology and so Purge CSS is baked right in. It's that simple. Use Bulma to your hearts content without the bloat.\n\n\n\n# Caveats\n\nThere are some caveats to Purge CSS especially around dynamically created classes. Since these classes aren't fully fleshed out in the .vue files, Purge CSS doesn't know they exist and therefore will strip out their  corresponding css. The fix is pretty simple though, Purge CSS allows us to whitelist classes that should never be purged whether they are found in the html or not. The whitelisting process is described in full in the [Purge CSS docs](https://www.purgecss.com/whitelisting). You can set the `whitelist` option as well as any other purge css option in `config/build.js`.\nSometimes when dev mode and adding markup that uses classes that have not previously been in use, you must restart dev mode for Purge CSS to pick up on the change. \n","isEmpty":false,"excerpt":"","title":"Light CSS Footprint","subtitle":"Purge CSS Bundles Only the Required CSS","category":["About Awake"],"author":"Daniel Kelly","date":"2019-07-29T17:30:16.858Z","featureImage":"/uploads/purge-css-hero.jpg","slug":"light-css-footprint"},{"content":"Disqus brings the power of commenting to the Awake template. It provides features like moderation, reactions, filtering, and social sharing out of the box. Best of all, it's free and super easy to setup!\n\n## Step 1\n\nGo to disqus.com and click on \"Get Started\"\n\n![Screenshot of Disqus homepage](/uploads/disqus-get-started.jpg)\n\n## Step 2\n\nChoose \"I want to install Disqus on my site\"\n\n![Disqus button \"I want to install Disqus on my site\"](/uploads/disqus-add-to-website.jpg)\n\n## Step 3\n\nSign-up or sign in\n\n## Step 4\n\nEnter site name, Disqus URL and select a category. The Disqus URL name is your siteâ€™s name in your account where you can access all the required settings.\n\n## Step 5\n\nSelect a plan. There are several premium versions available, but don't worry the free one works just great too!\n\n## Step 6\n\nDisqus supports a number of different platforms but also works great in static sites like Awake. Scroll to the very bottom of the list and choose: \"I don't see my platform listed, install manually with\"\n\n![Disqus button \"I don't see my platform listed, install manually with\"](/uploads/disqus-platform-button.jpg)\n\n## Step 7\n\nYou can ignore everything on this page, as the Awake template has already configured it for you. All you have to do is find your \"Site Short Name\" (it's the first part of the url) and add it to `config/_siteConfig.js`.\n\nTake it from here:\n\n![Site Short Name in url](/uploads/disqus-site-short-name.jpg)\n\nand put it here:\n\n```\n// config/_siteConfig.js\nexport default {\n...\n// Disqus\n  disqus: {\n    on: false,\n    loadingStrategy: 'button', // Options: onload, lazy, button\n    siteShortName: 'testing-bjsj2bjl0i'\n  },\n}\n```\n\n## Step 8\n\nThat's it! You've got comments up and running on your site. Go checkout a post and see your new fancy comments section.\n","isEmpty":false,"excerpt":"","title":"Comments Support","subtitle":"Add Comments to Posts With Disqus","category":["Third Party Integrations"],"author":"Daniel Kelly","date":"2019-07-24T19:59:59.000Z","featureImage":"/uploads/disqus-hero.jpg","slug":"comments-support"},{"content":"Awake uses the awesome npm package [markdown-it ](https://github.com/markdown-it/markdown-it)by [Vitaly Puzrin](https://github.com/puzrin) to provide a wealth of markup options for your posts\n\n# h1 Heading\n\n## h2 Heading\n\n### h3 Heading\n\n#### h4 Heading\n\n##### h5 Heading\n\n###### h6 Heading\n\n## Horizontal Rules\n\n- - -\n\n## Typographic replacements\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,,  -- ---\n\n\"Smartypants, double quotes\" and 'single quotes'\n\n## Emphasis\n\n**This is bold text**\n\n**This is bold text**\n\n_This is italic text_\n\n_This is italic text_\n\n~~Strikethrough~~\n\n## Blockquotes\n\n> Blockquotes can also be nested...\n>\n> > ...by using additional greater-than signs right next to each other...\n> >\n> > > ...or with spaces between arrows.\n\n## Lists\n\nUnordered\n\n* Create a list by starting a line with `+`, `-`, or `*`\n* Sub-lists are made by indenting 2 spaces:\n  * Marker character change forces new list start:\n    * Ac tristique libero volutpat at\n    * Facilisis in pretium nisl aliquet\n    * Nulla volutpat aliquam velit\n* Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n4. You can use sequential numbers...\n5. ...or keep all the numbers as `1.`\n\nStart numbering with offset:\n\n57. foo\n58. bar\n\n## Code\n\nInline `code`\n\nIndented code\n\n```\n// Some comments\nline 1 of code\nline 2 of code\nline 3 of code\n```\n\nBlock code \"fences\"\n\n```\nSample text here...\n```\n\n## Tables\n\n| Option | Description                                                               |\n| ------ | ------------------------------------------------------------------------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default.    |\n| ext    | extension to be used for dest files.                                      |\n\nRight aligned columns\n\n| Option | Description                                                               |\n| ------ | ------------------------------------------------------------------------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default.    |\n| ext    | extension to be used for dest files.                                      |\n\n## Links\n\n[link text](https://danielkelly.io)\n\n[link with title](https://danielkelly.io \"title text!\")\n\nAutoconverted link https://danielkelly.io\n\n## Images\n\n![cat](/uploads/cat-1045782_1920.jpg)\n\n## Subscript/SuperScript\n\n* 19^th^\n* H\\~2\\~O\n\n## Footnotes\n\nFootnote 1 link\\[^first].\n\nFootnote 2 link\\[^second].\n\nInline footnote^\\[Text of inline footnote] definition.\n\nDuplicated footnote reference\\[^second].\n\n\\[^first]: Footnote **can have markup**\n\n```\nand multiple paragraphs.\n```\n\n\\[^second]: Footnote text.\n\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\n\nTerm 1\n\n:   Definition 1\nwith lazy continuation.\n\nTerm 2 with _inline markup_\n\n:   Definition 2\n\n```\n    { some code, part of Definition 2 }\n\nThird paragraph of definition 2.\n```\n\n_Compact style:_\n\nTerm 1\n  ~ Definition 1\n\nTerm 2\n  \\~ Definition 2a\n  \\~ Definition 2b\n","isEmpty":false,"excerpt":"","title":"Post Markup And Formatting","subtitle":"All the Tags You Need to Make Clean and Expressive Posts","category":["About Awake"],"author":"Daniel Kelly","date":"2019-07-04T03:02:00.000Z","featureImage":"/uploads/markup-hero.jpg","slug":"post-markup-and-formatting"}]